(window.webpackJsonp=window.webpackJsonp||[]).push([[3],{186:function(t,s,a){t.exports=a.p+"assets/img/4.b163ed0e.png"},187:function(t,s,a){t.exports=a.p+"assets/img/es6to5.11e823bd.png"},188:function(t,s,a){t.exports=a.p+"assets/img/bundle.c0190909.png"},189:function(t,s,a){t.exports=a.p+"assets/img/module.83b28b59.png"},204:function(t,s,a){"use strict";a.r(s);var n=a(2),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h1",{attrs:{id:"webpack-究竟解决了什么问题"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#webpack-究竟解决了什么问题"}},[t._v("#")]),t._v(" Webpack 究竟解决了什么问题")]),t._v(" "),n("p",[t._v("互联网爆发式增长的近些年，前端行业也迎来了空前的大繁荣。前端应用变得日益复杂，但是早期制定的前端技术标准根本没有预料到前端行业会有今天的这个规模，所以在"),n("strong",[t._v("设计上存在很多的缺陷")]),t._v("。"),n("code",[t._v("JavaScript")]),t._v(" 语言的标准也是直至 "),n("strong",[t._v("ECMAScript2015")]),t._v(" 的出现才逐渐走向完善。在之前，由于"),n("code",[t._v("JavaScript")]),t._v(" 本身并没有提供模块系统，前端在工程化的进程中，开发人员迫不得已，只能通过各种奇葩的手段来实现"),n("strong",[t._v("前端模块化")]),t._v("。")]),t._v(" "),n("h2",{attrs:{id:"早期的几种模块化方式"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#早期的几种模块化方式"}},[t._v("#")]),t._v(" 早期的几种模块化方式")]),t._v(" "),n("p",[t._v("1."),n("strong",[t._v("文件划分")]),t._v("：")]),t._v(" "),n("p",[t._v("约定每一个文件是一个独立的模块，html 文件通过 script 标签引入模块，直接访问模块中的变量或函数。")]),t._v(" "),n("p",[t._v("缺点：")]),t._v(" "),n("ul",[n("li",[n("strong",[t._v("模块直接在全局工作，大量模块成员污染全局作用域")]),t._v("；")]),t._v(" "),n("li",[n("strong",[t._v("没有私有空间，所有模块内的成员都可以在模块外部被访问或者修改")]),t._v("；")]),t._v(" "),n("li",[n("strong",[t._v("一旦模块增多，容易产生命名冲突")]),t._v("；")]),t._v(" "),n("li",[n("strong",[t._v("无法管理模块与模块之间的依赖关系")]),t._v("；")]),t._v(" "),n("li",[n("strong",[t._v("在维护的过程中也很难分辨每个成员所属的模块")]),t._v("。")])]),t._v(" "),n("p",[t._v("2."),n("strong",[t._v("命名空间方式")]),t._v("：")]),t._v(" "),n("p",[t._v("约定每个模块只暴露一个全局对象，所有模块成员都挂载到这个全局对象中，具体做法是在文件划分的基础上，通过将每个模块“包裹”为一个全局对象的形式实现。这其实只解决了命名冲突的问题，其它问题依旧存在。")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// module-a.js")]),t._v("\nwindow"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("moduleA "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("method1")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"这是moduleA的method1方法"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),n("p",[t._v("3."),n("strong",[t._v("IIFE 立即执行函数")])]),t._v(" "),n("p",[t._v("使用立即执行函数表达式（IIFE，Immediately-Invoked Function Expression）为模块提供私有空间。具体做法是将每个模块成员都放在一个立即执行函数所形成的私有作用域中，对于需要暴露给外部的成员，通过挂到全局对象上的方式实现。")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// module-a.js")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("$")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 通过参数明显表明这个模块的依赖")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" name "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"module-a"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("method1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("name "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"#method1"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("$")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v('"body'),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("doSomeThing")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n  window"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("moduleA "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    method1"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" method1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("jQuery"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),n("p",[t._v("这几种方式虽然都解决了模块代码的组织问题，但模块加载的问题却被忽略了。通过 script 标签的方式直接在页面中引所有的模块，意味着模块的加载并不受代码的控制，时间久了维护起来会十分麻烦。比如说，如果代码里需要用到某个模块，如果 HTML 中忘记引入这个模块，又或是代码中移除了某个模块的使用，而 HTML 还忘记删除该模块的引用，都会引起很多问题和不必要的麻烦。")]),t._v(" "),n("p",[t._v("更为理想的方式应该是在页面中引入一个 JS 入口文件，其余用到的模块可以通过代码控制，按需加载进来。")]),t._v(" "),n("h2",{attrs:{id:"模块化规范的出现"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#模块化规范的出现"}},[t._v("#")]),t._v(" 模块化规范的出现")]),t._v(" "),n("ul",[n("li",[t._v("AMD 早期专门为浏览器设计的一个规范，同期还推出了一个非常出名的库，叫做 "),n("a",{attrs:{href:"https://requirejs.org/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Require.js"),n("OutboundLink")],1)]),t._v(" "),n("li",[t._v("CMD 典型的有淘宝的 "),n("a",{attrs:{href:"https://seajs.github.io/seajs/docs/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Sea.js"),n("OutboundLink")],1),t._v(" 这个标准类似于 CommonJS")])]),t._v(" "),n("blockquote",[n("p",[t._v("其实在社区制定 AMD 规范的时候，Node.js 中的 CommonJS 模块化规范就已经很成熟了，为什么当时还要重新设计一套规范呢？原因在于 CommonJs 约定模块要以同步的方式加载，在 Node 环境下所有的模块都存放在本地硬盘，同步加载等待的时间就是硬盘的读取时间。 但是对于浏览器来说，这却是一个大问题，因为模块都放在服务器端，等待时间取决于网速的快慢，应用效率就会非常的低。这就决定了，浏览器端加载模块必须是异步的。")])]),t._v(" "),n("p",[t._v("直到 ES6 的出现，前端模块化才开始走向常成熟，对前端模块化规范的最佳实践方式也基本实现了统一。")]),t._v(" "),n("ul",[n("li",[t._v("在 Node.js 环境中，我们遵循 CommonJS 规范来组织模块。")]),t._v(" "),n("li",[t._v("在浏览器环境中，我们遵循 ES Modules 规范。")])]),t._v(" "),n("p",[n("img",{attrs:{src:a(186),alt:""}})]),t._v(" "),n("h2",{attrs:{id:"模块打包工具的诞生"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#模块打包工具的诞生"}},[t._v("#")]),t._v(" 模块打包工具的诞生")]),t._v(" "),n("p",[t._v("对于开发过程而言，模块化肯定是必要的，但是对于生产上来说，模块化的代码就显得没那么必要了。\n所以就出现了很多的工具，让我们的应用在开发阶段继续享受模块化带来的优势，又不必担心模块化对生产环境所产生的影响。而这些工具主要做了以下几点事情：")]),t._v(" "),n("ol",[n("li",[n("strong",[t._v("ES Modules 模块系统还存在环境兼容问题。尽管主流浏览器的最新版本都支持这一特性，但是目前还无法保证用户的浏览器使用情况。所以需要对代码进行编译转换为所有大多数浏览器环境都兼容的代码")]),t._v("。")])]),t._v(" "),n("p",[n("img",{attrs:{src:a(187),alt:""}})]),t._v(" "),n("ol",{attrs:{start:"2"}},[n("li",[n("strong",[t._v("模块化的方式划分出来的模块文件过多，而前端应用又运行在浏览器中，每一个文件都需要单独从服务器请求回来。零散的模块文件必然会导致浏览器的频繁发送网络请求，影响应用的工作效率。所以需要将所有的模块打包到一起")]),t._v("。")])]),t._v(" "),n("p",[n("img",{attrs:{src:a(188),alt:""}})]),t._v(" "),n("ol",{attrs:{start:"3"}},[n("li",[n("strong",[t._v("从JavaScript模块化做了一个延伸，HTML 和 CSS 这些资源文件也会面临需要被模块化的问题。而且从宏观角度来看，这些文件也都应该看作前端应用中的一个模块，只不过这些模块的种类和用途跟 JavaScript 不同。所以最好能够支持不同种类的前端模块类型，也就是要将开发过程中涉及的样式、图片、字体等所有资源文件都作为模块使用，这样所有资源文件的加载都可以通过代码控制，与业务代码统一维护。")])])]),t._v(" "),n("p",[n("img",{attrs:{src:a(189),alt:""}})]),t._v(" "),n("p",[n("strong",[t._v("Rollup")]),t._v("、"),n("strong",[t._v("Fis")]),t._v("、"),n("strong",[t._v("Webpack")]),t._v("、"),n("strong",[t._v("Parcel")]),t._v("、等工具在这样一个背景下应运而生，而 "),n("strong",[t._v("Webpack")]),t._v(" 凭借全面且出色的能力出色的解决了 "),n("strong",[t._v("前端模块化")]),t._v(" 进程中遇到的各种问题，从中脱颖而出，🔥 迅速成为了现代前端项目的标配（现代前端框架 React、Vue 的脚手架工具都是基于 Webpack 进行封装）。它通过“万物皆模块”设计思想，巧妙地实现了整个前端项目的模块化，以 Loader 和 Plugin 形成的繁荣生态，也使得 Webpack 的能力横向扩展了整个前端构建领域，堪称 "),n("strong",[t._v("现代前端工程化的基石")]),t._v("。")]),t._v(" "),n("p",[t._v("一句话总结一下，我们每天开发过程中都在使用的"),n("strong",[t._v("Webpack")]),t._v(" 它提供的是一套前端的模块化解决方案，Webpack本质上其实是一个模块打包工具。")])])}),[],!1,null,null,null);s.default=e.exports}}]);