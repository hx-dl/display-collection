(window.webpackJsonp=window.webpackJsonp||[]).push([[6],{190:function(s,a,t){s.exports=t.p+"assets/img/css.07960b10.png"},202:function(s,a,t){"use strict";t.r(a);var n=t(2),e=Object(n.a)({},(function(){var s=this,a=s.$createElement,n=s._self._c||a;return n("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[n("h1",{attrs:{id:"webpack-如何实现非-js-文件的加载"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#webpack-如何实现非-js-文件的加载"}},[s._v("#")]),s._v(" Webpack 如何实现非 JS 文件的加载")]),s._v(" "),n("p",[s._v("Webpack 实现的是整个前端项目的模块化，也就是说，我们可以通过 Webpack 去管理前端项目中任意类型（包括 CSS 文件、图片等）的资源文件。而做到这一点，其实都是依靠 Webpack 的"),n("code",[s._v("Loader")]),s._v("机制。")]),s._v(" "),n("h2",{attrs:{id:"webpack处理特殊模块的规则"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#webpack处理特殊模块的规则"}},[s._v("#")]),s._v(" Webpack处理特殊模块的规则")]),s._v(" "),n("p",[s._v("我们还是举例子，先来使用 Webpack 对一个 Demo 做打包，不一样的是，我们这次来对一个 css 文件做打包，看看会发生什么？")]),s._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[s._v(" └─ Webpack"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("Css ························ sample root dir\n    ├── src ·································· source dir\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v("   │   └── index"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("css ························· main styles\n    ├── "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("package")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("json ························· "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("package")]),s._v(" file\n    └── webpack"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("config"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("js ···················· webpack config file\n")])])]),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/* ./src/index.css */")]),s._v("\nbody "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  margin"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" auto"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  padding"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("20")]),s._v("px"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  font"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("size"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("20")]),s._v("px"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  background"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" #"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("7")]),s._v("ea9ca"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])])]),n("p",[s._v("然后将 Webpack 配置中的入口文件路径指定为 index.css 的文件路径，让 Webpack 直接打包 CSS 资源文件，具体配置如下所示：")]),s._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[s._v("module"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("exports "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 样式文件路径")]),s._v("\n  entry"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"./src/main.css"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  output"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    filename"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"bundle.js"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])])]),n("p",[s._v("接着，走你～ 报错了")]),s._v(" "),n("p",[n("img",{attrs:{src:t(190),alt:"css打包结果"}})]),s._v(" "),n("p",[s._v("因为 Webpack 的内部，默认只能处理 JavaScript 代码，所以在没有制定对应的 Loader 的时候，所有的文件都会被当作 JavaScript 进行解析，但是 CSS 代码不符合 JavaScript 语法，所以就报错了。")]),s._v(" "),n("p",[s._v("为了验证这一点，我们可以尝试在 css 文件中写入 JavaScript 代码。打包结果是正常通过的")]),s._v(" "),n("p",[s._v("我们引入以下 css-loader，来处理以下 css 文件,看看打包结果是什么:")]),s._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// Module")]),s._v("\n___CSS_LOADER_EXPORT___"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("push")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("module"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("i"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"body {\\n  margin: 0 auto;\\n  padding: 0 20px;\\n  font-size: 20px;\\n  background: #7ea9ca;\\n}\\n"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('""')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])])]),n("p",[s._v("css-loader将所有的css代码保存在了一个数组里，css模块转换为成了一个js模块，如果在开发中，仅仅使用css-loader是不够的，我们一般还会通过style-loader 将这些css代码插入到html的"),n("code",[s._v("<style>")]),s._v("标签中,如果想要打包出单独的css文件，我们还需要使用"),n("code",[s._v("mini-css-extract-plugin")]),s._v("这个插件将css代码从js模块中抽离出去。")]),s._v(" "),n("p",[s._v("总的来说，Webpack加载非JS模块的做法就是将模块丢给文件对应的Loader进行处理")]),s._v(" "),n("h2",{attrs:{id:"webpack处理图片的原理"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#webpack处理图片的原理"}},[s._v("#")]),s._v(" Webpack处理图片的原理")]),s._v(" "),n("p",[s._v("对于图片等文件的处理，通常是通过"),n("code",[s._v("file-loader")]),s._v("或者"),n("code",[s._v("url-loader")]),s._v("来实现，其实原理也很简单，这里简单的说一下：")]),s._v(" "),n("ul",[n("li",[s._v("通过引入的路径找到图片文件，直接将图片文件拷贝到loader中配置的最终要导出的目录，并生成一个JS模块记录最终的文件路径导出")]),s._v(" "),n("li",[s._v("如果是部分很小的图片(通常默认配置小于8kb)，url-loader采用转换为base64，注入到js代码中")])])])}),[],!1,null,null,null);a.default=e.exports}}]);